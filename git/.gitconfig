[core]
  autocrlf = input
  editor = vim
  pager = less
  whitespace =  trailing-space,space-before-tab,-indent-with-non-tab
  excludesfile = ~/.gitignore

  # Make `git rebase` safer on OS X
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false

  # Prevent showing files whose names contain non-ASCII symbols as unversioned.
  # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
  precomposeunicode = false

[include]
  path = .gitconfig.local

[diff]
  algorithm = patience
  renames = copies

[diff "bin"]
  textconv = hexdump -v -C

[help]
  autocorrect = 1

[color]
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red
  new = green

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[push]
  default = simple
  followTags = true

[pull]
  rebase = false

[merge]
  log = true
  tool = vimdiff

[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f

[alias]
  s = status -s
  st = status

  b = branch
  ch = checkout
  fa = fetch --all

  co = commit
  com = commit -m
  sco = commit -S
  scom = commit -S -m
  amend = commit --amend -C HEAD

  d = diff
  dc = diff --cached

  r = reset
  a = add
  aa = add --all .

  pa = "!git pull; git submodule foreach git pull"
  ff = merge --ff-only
  pullff = pull --ff-only
  noff = merge --no-ff
  repull = !git aa && git reset --hard && git pullff

  credit = "!f() { git --amend --author \"$1 <$2>\" -C HEAD;  }; f"
  reb = "!f() { git rebase -i HEAD~$1; }; f"

  l = log --pretty=oneline -n 20 --graph --abbrev-commit
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]\\ %n%Cred%GK\\%Cblue[%GS]" --decorate --numstat

  tags = tag -l
  branches = branch -a
  remotes =  remote -v

  set-upstream = "!git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`"
  push-upstream = "!git push -u origin `git symbolic-ref --short HEAD`"
  pushup = push-upstream
  pulldown = "!f() { cur=`git symbolic-ref --short HEAD` && git checkout master && git branch -D $cur; }; f"

# github needs love
[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
  insteadOf = "github:"

# and so does gitlab
[url "git@gitlab.com:"]
  insteadOf = "gl:"
  pushInsteadOf = "gitlab:"
  pushInsteadOf = "https://gitlab.com/"

[url "https://gitlab.com/"]
  insteadOf = "gitlab:"
